<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Rest;

use Twilio\Domain;
use Twilio\Exceptions\TwilioException;
use Twilio\Http\File;
use Twilio\Http\Response;
use Twilio\Rest\Numbers\V2;

/**
 * @property \Twilio\Rest\Numbers\V2 $v2
 * @property \Twilio\Rest\Numbers\V2\RegulatoryComplianceList $regulatoryCompliance
 */
class Numbers extends Domain {
    protected $_v2;

    /**
     * Construct the Numbers Domain
     *
     * @param Client $client Client to communicate with Twilio
     */
    public function __construct(Client $client) {
        parent::__construct($client);

        $this->baseUrl = 'https://numbers.twilio.com';
    }

    /**
     * @inheritDoc
     */
    public function request(
        string $method,
        string $uri,
        array $params = [],
        array $data = [],
        array $headers = [],
        string $user = null,
        string $password = null,
        int $timeout = null
    ): Response {
        // See https://github.com/twilio/twilio-php/pull/660#pullrequestreview-505828724
        if (isset($data['File']) && $data['File'] instanceof File) {
            $originalDomain = $this->baseUrl;
            $this->baseUrl = 'https://numbers-upload.twilio.com';
        }

        $result = parent::request(
            $method,
            $uri,
            $params,
            $data,
            $headers,
            $user,
            $password,
            $timeout
        );

        if (isset($originalDomain)) {
            $this->baseUrl = $originalDomain;
        }

        return $result;
    }

    /**
     * @return V2 Version v2 of numbers
     */
    protected function getV2(): V2 {
        if (!$this->_v2) {
            $this->_v2 = new V2($this);
        }
        return $this->_v2;
    }

    /**
     * Magic getter to lazy load version
     *
     * @param string $name Version to return
     * @return \Twilio\Version The requested version
     * @throws TwilioException For unknown versions
     */
    public function __get(string $name) {
        $method = 'get' . \ucfirst($name);
        if (\method_exists($this, $method)) {
            return $this->$method();
        }

        throw new TwilioException('Unknown version ' . $name);
    }

    /**
     * Magic caller to get resource contexts
     *
     * @param string $name Resource to return
     * @param array $arguments Context parameters
     * @return \Twilio\InstanceContext The requested resource context
     * @throws TwilioException For unknown resource
     */
    public function __call(string $name, array $arguments) {
        $method = 'context' . \ucfirst($name);
        if (\method_exists($this, $method)) {
            return \call_user_func_array([$this, $method], $arguments);
        }

        throw new TwilioException('Unknown context ' . $name);
    }

    protected function getRegulatoryCompliance(): \Twilio\Rest\Numbers\V2\RegulatoryComplianceList {
        return $this->v2->regulatoryCompliance;
    }

    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString(): string {
        return '[Twilio.Numbers]';
    }
}
